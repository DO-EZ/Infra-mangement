version: '3.8'

services:
  backend:
    image: cocopam/captcha-server:latest
    deploy:
      replicas: 1
      placement:
        constraints: [node.labels.env == dev]
      restart_policy:
        condition: on-failure
    networks:
      - traefik-network

  frontend:
    image: cocopam/captcha-front:latest
    deploy:
      placement:
        constraints: [node.labels.env == dev]
      restart_policy:
        condition: on-failure
    networks:
      - traefik-network

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.21.2
    ports:
      - "5000:5000"
    deploy:
      replicas: 1
      placement:
        constraints: [node.labels.ml == true]
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.mlflow.rule=Host(`dev.mlflow.com`)"
        - "traefik.http.services.mlflow.loadbalancer.server.port=5000"
    networks:
      - traefik-network

  nginx:
    image: nginx:stable-alpine-slim
    deploy:
      placement:
        constraints: [node.role == manager and node.labels.ingress == true]
      restart_policy:
        condition: on-failure
      replicas: 1
    volumes:
      - ./ingress/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - target: 80
        published: 6001
    networks:
      - traefik-network

networks:
  traefik-network:
    driver: overlay
    external: true 